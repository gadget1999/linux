#!/usr/bin/env bash

CMD_PATH=$(dirname "$0")
source $CMD_PATH/lib/common.sh
source $CMD_PATH/lib/email.sh
source $CMD_PATH/lib/firebase.sh
#ENABLE_LOGGING=0
#DEBUG=0

check_env "METRICS_FB_URL METRICS_FB_KEY"
check_env "MAIN_EMAIL EMAIL_SENDER EMAIL_API_KEY"
check_packages "curl jq"

if [ $# == 0 ]; then
 check_env "HOST_WATCHLIST"
else
 HOST_WATCHLIST="$*"
fi
check_packages "jq"

MAX_DELAY=7300

FLAG_DIR=/tmp

function check_alive() {
 local host=$1
 local flag_file="$FLAG_DIR/host-monitor-$host.down"
 local timestamp=$(firebase_get_attr "heartbeat/$host" "timestamp")
 local error=""
 if [ "$timestamp" == "null" ] || [ "$timestamp" == "" ] ; then
  error="[$host]: No heartbeat data found."
  log_error "$error"
  if [ ! -f "$flag_file" ]; then
    send_host_report $host "$error"
    touch "$flag_file"
  fi
  return
 fi

 local delta=$(( $(date +%s) - $timestamp ))
 if (( $delta > $MAX_DELAY )); then
  error="[$host]: $delta seconds passed since last update. Host may be down."
  log_error "$error"
  if [ ! -f "$flag_file" ]; then
    send_host_report $host "$error"
    touch "$flag_file"
  fi
  return
 fi

 # Host is online, clear flag if it exists
 if [ -f "$flag_file" ]; then
   rm -f "$flag_file"
 fi

 local temperature=$(firebase_get_attr "heartbeat/$host" "temperature")
 local free_ram_mb=$(firebase_get_attr "heartbeat/$host" "free_ram_mb")
 debug "[$host]: last seen $delta seconds ago (free RAM: $free_ram_mb MB, temperature: $temperatureÂ°)" 
}

function send_host_report() {
 local host=$1
 local error=$2
 log_error "Sending error report: $error"
 check_email_env
 send-email \
  "Server [$host] may be down" \
  "$error"
}

firebase_setup $METRICS_FB_URL $METRICS_FB_KEY

for host in ${HOST_WATCHLIST[*]}; do
  check_alive $host
done
