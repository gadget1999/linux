#!/usr/bin/env bash

CMD_PATH=$(dirname "$0")
source $CMD_PATH/lib/common.sh
source $CMD_PATH/lib/docker.sh
source $CMD_PATH/lib/certificate.sh

check_env "SEAFILE_DATA SEAFILE_DB_KEY SEAFILE_ADMIN SEAFILE_PASSWORD SEAFILE_PORT"
check_packages "docker-compose docker"
check_cert_env

export SEAFILE_PORT
export SEAFILE_DB_KEY
export SEAFILE_ADMIN
export SEAFILE_PASSWORD
export SEAFILE_FQDN=$DDNS_DOMAIN
export SEAFILE_DATA

SEAFILE_SSL=$SEAFILE_DATA/ssl
[ ! -d $SEAFILE_SSL ] && sudo mkdir $SEAFILE_SSL
sudo cp $CERT_ROOT_FOLDER/$CERT_FULLCHAIN $SEAFILE_SSL/$DDNS_DOMAIN.crt
sudo cp $CERT_ROOT_FOLDER/$CERT_KEY $SEAFILE_SSL/$DDNS_DOMAIN.key

POD="seafile"
COMPOSE_FILE="$CMD_PATH/kubernetes/$POD-compose.yml"

function delete_pod() {
 debug "Deleting existing pod"
 docker rm -f seafile seafile-mysql seafile-memcached
}

function start_pod() {
 local pod_main_container=$1
 local compose_file=$2

 [ "$(container_exists $pod_main_container)" == "true" ] && delete_pod

 local detach_mode="-d"
 [ "$DEBUG_POD" != "" ] && detach_mode=""
 
 debug "Starting pod from $compose_file..."
 docker-compose -f $compose_file up $detach_mode
}

[ "$1" == "debug" ] && DEBUG_POD=1

start_pod $POD $COMPOSE_FILE
